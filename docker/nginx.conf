upstream django {
    # Unix sockets have less overhead than TCP sockets
    server unix:///home/ubuntu/code/unix.sock;
}

server {
    listen          8000;
    listen          8001 ssl;

    server_name     moth;

    # SSL configuration
    ssl_certificate         /home/ubuntu/code/ssl/cacert.pem;
    ssl_certificate_key     /home/ubuntu/code/ssl/privkey.pem;
    ssl_protocols           SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    # Set the ciphers to use
    ssl_ciphers DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:EDH-RSA-DES-CBC3-SHA:AES256-SHA:DES-CBC3-SHA:AES128-SHA:RC4-SHA:RC4-MD5;

	# Turn off version number displayed on all auto generated error pages
	server_tokens off;

    keepalive_timeout       120;

    charset off;

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    # max upload size
    client_max_body_size 50M;

    # Static files are served by Nginx
    location /static {
            root /home/ubuntu/code/;
    }

    # Media files are also served by Nginx
    location /media {
            root /home/ubuntu/code/;
    }

    # Finally, send all requests to the Django server
    location / {
        uwsgi_pass  django;
        include     /home/ubuntu/code/docker/uwsgi_params;

        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   REMOTE_HOST      $remote_addr;
        proxy_set_header   REMOTE_USER      $remote_user;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-FORWARDED-PROTOCOL $scheme;

        proxy_redirect off;
    }

}
